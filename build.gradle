group 'segodin'
version '0.0.1'

apply plugin: 'java'
apply plugin: "spring-boot"
apply plugin: 'com.moowork.node'

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    ext {
        gradleVersion = "2.13"
        springBootVersion = "1.3.3.RELEASE"
        mysqlDriverVersion = "5.1.38"
        liquibaseVersion = "3.4.2"
        junitVersion = "4.8.2"

        // Node
        gradleNodePluginVersion = "0.11"
        nodeVersion = "5.2.0"
        npmVersion = "3.3.12"
        nodeDistinationUrl = "https://nodejs.org/dist"
    }

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.moowork.gradle:gradle-node-plugin:${gradleNodePluginVersion}")
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-rest:${springBootVersion}")
//    compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    compile("org.liquibase:liquibase-core:${liquibaseVersion}")
    compile("mysql:mysql-connector-java:${mysqlDriverVersion}")

    testCompile("junit:junit:${junitVersion}")
}

node {
    version = "${nodeVersion}"
    npmVersion = "${npmVersion}"
    distBaseUrl = "${nodeDistinationUrl}"
    download = true
    workDir = file("${project.buildDir}/nodejs")
}

task bundle(type: NpmTask) {
    String profile = System.properties['profile'];
    if (profile == null || "".equals(profile)) {
        profile = "prod";
    }
    println("Gradle using profile: " + profile);
    args = ['run', "bundle-${profile}", "--profile=${profile}"]
}
bundle.dependsOn(processResources)
bundle.dependsOn(npm_install)

assemble.dependsOn(bundle)

bootRun.dependsOn(bundle)

// Task for javascript hot reloading, need to invoke manually. Can't use it in 'bundle' task because it blocks thread until stop.
task bundleWatch(type: NpmTask) {
    args = ['run', "bundle-dev-watch", "--profile=dev"]
}

jar {
    baseName = 'market-engine-app'
    version =  "${version}"
}
jar.dependsOn(bundle)

task wrapper(type: Wrapper) {
    gradleVersion = "${gradleVersion}"
}